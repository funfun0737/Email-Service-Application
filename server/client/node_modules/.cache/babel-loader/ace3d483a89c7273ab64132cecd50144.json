{"ast":null,"code":"var _jsxFileName = \"/Users/bambi/react/server/client/src/components/surveys/SurveyForm.js\";\n//shows a form for a user to add input\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form'; //to connect with store\n\nimport SurveyField from './SurveyField';\nconst FIELDS = [{\n  label: 'Survey Title',\n  name: 'title'\n}, {\n  label: 'Subect Line',\n  name: 'subject'\n}, {\n  label: 'Email Body',\n  name: 'body'\n}, {\n  label: 'Recipient List',\n  name: 'emails'\n}];\n\nclass SurveyForm extends Component {\n  renderFields() {\n    return _.map(FIELDS, ({\n      label,\n      name\n    }) => {\n      return React.createElement(Field, {\n        key: name,\n        component: SurveyField,\n        type: \"text\",\n        label: label,\n        name: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(values => console.log(values)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.renderFields(), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"teal btn-flat right white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Submit\", React.createElement(\"i\", {\n      className: \"material-icons right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"done\"))));\n  }\n\n}\n\nexport default reduxForm({\n  form: 'surveyForm'\n})(SurveyForm); //kind of similar : connect and redux","map":{"version":3,"sources":["/Users/bambi/react/server/client/src/components/surveys/SurveyForm.js"],"names":["_","React","Component","reduxForm","Field","SurveyField","FIELDS","label","name","SurveyForm","renderFields","map","render","props","handleSubmit","values","console","log","form"],"mappings":";AAAA;AACA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAcC,SAAd,QAA6B,OAA7B;AACA,SAAQC,SAAR,EAAmBC,KAAnB,QAA+B,YAA/B,C,CAA4C;;AAC5C,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,MAAM,GAAC,CACX;AAAEC,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,IAAI,EAAC;AAA9B,CADW,EAEX;AAAED,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,IAAI,EAAC;AAA7B,CAFW,EAGX;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,IAAI,EAAC;AAA5B,CAHW,EAIX;AAAED,EAAAA,KAAK,EAAE,gBAAT;AAA2BC,EAAAA,IAAI,EAAC;AAAhC,CAJW,CAAb;;AAOA,MAAMC,UAAN,SAAyBP,SAAzB,CAAkC;AAChCQ,EAAAA,YAAY,GAAE;AACZ,WAAOV,CAAC,CAACW,GAAF,CAAML,MAAN,EAAa,CAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,KAAiB;AACnC,aACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,IAAZ;AAAkB,QAAA,SAAS,EAAEH,WAA7B;AAA0C,QAAA,IAAI,EAAC,MAA/C;AAAsD,QAAA,KAAK,EAAEE,KAA7D;AAAoE,QAAA,IAAI,EAAEC,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGH,KAJQ,CAAP;AAKH;;AAECI,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAAM,IAAEC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAhC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,YAAL,EADH,EAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,gCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,CAFF,CADF,CADF;AAWD;;AArB+B;;AAuBhC,eAAeP,SAAS,CAAC;AACvBe,EAAAA,IAAI,EAAC;AADkB,CAAD,CAAT,CAEZT,UAFY,CAAf,C,CAEe","sourcesContent":["//shows a form for a user to add input\nimport _ from 'lodash';\nimport React,{Component} from'react';\nimport {reduxForm, Field} from 'redux-form';//to connect with store\nimport SurveyField from './SurveyField';\n\nconst FIELDS=[\n  { label: 'Survey Title', name:'title'},\n  { label: 'Subect Line', name:'subject'},\n  { label: 'Email Body', name:'body'},\n  { label: 'Recipient List', name:'emails'}\n];\n\nclass SurveyForm extends Component{\n  renderFields(){\n    return _.map(FIELDS,({label, name})=>{\n      return (\n        <Field key={name} component={SurveyField} type=\"text\" label={label} name={name}/>\n    );\n  });\n}\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.props.handleSubmit(values=>console.log(values))}>\n          {this.renderFields()}\n          <button type=\"submit\" className=\"teal btn-flat right white-text\">\n          Submit\n          <i className=\"material-icons right\">done</i>\n          </button>\n        </form>\n     </div>\n   );\n  }\n}\n  export default reduxForm({\n    form:'surveyForm'\n  })(SurveyForm);//kind of similar : connect and redux\n"]},"metadata":{},"sourceType":"module"}