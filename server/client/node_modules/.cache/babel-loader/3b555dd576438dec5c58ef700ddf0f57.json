{"ast":null,"code":"var _jsxFileName = \"/Users/bambi/react/server/client/src/components/surveys/SurveyForm.js\";\n//shows a form for a user to add input\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form'; //to connect with store\n\nimport { Link } from 'react-router-dom';\nimport SurveyField from './SurveyField';\nimport validateEmails from '../../utils/validateEmails';\nimport formFields from './formFields';\n\nclass SurveyForm extends Component {\n  renderFields() {\n    return _.map(formFields, ({\n      label,\n      name\n    }) => {\n      return React.createElement(Field, {\n        key: name,\n        component: SurveyField,\n        type: \"text\",\n        label: label,\n        name: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.props.onSurveySubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.renderFields(), React.createElement(Link, {\n      to: \"/surveys\",\n      className: \"red btn-flat white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"teal btn-flat right white-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Next\", React.createElement(\"i\", {\n      className: \"material-icons right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"done\"))));\n  }\n\n}\n\nfunction validate(values) {\n  const errors = {};\n  errors.recipients = validateEmails(values.recipients || '');\n\n  _.each(formFields, ({\n    name\n  }) => {\n    if (!values[name]) {\n      errors[name] = 'You must provide a value';\n    }\n  });\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate,\n  form: 'surveyForm',\n  destroyOnUnmount: false\n})(SurveyForm); //kind of similar : connect and redux","map":{"version":3,"sources":["/Users/bambi/react/server/client/src/components/surveys/SurveyForm.js"],"names":["_","React","Component","reduxForm","Field","Link","SurveyField","validateEmails","formFields","SurveyForm","renderFields","map","label","name","render","props","handleSubmit","onSurveySubmit","validate","values","errors","recipients","each","form","destroyOnUnmount"],"mappings":";AAAA;AACA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAcC,SAAd,QAA6B,OAA7B;AACA,SAAQC,SAAR,EAAmBC,KAAnB,QAA+B,YAA/B,C,CAA4C;;AAC5C,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAkC;AAChCQ,EAAAA,YAAY,GAAE;AACZ,WAAOV,CAAC,CAACW,GAAF,CAAMH,UAAN,EAAiB,CAAC;AAACI,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,KAAiB;AACvC,aACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,IAAZ;AAAkB,QAAA,SAAS,EAAEP,WAA7B;AAA0C,QAAA,IAAI,EAAC,MAA/C;AAAsD,QAAA,KAAK,EAAEM,KAA7D;AAAoE,QAAA,IAAI,EAAEC,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGH,KAJQ,CAAP;AAKH;;AAECC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,cAAnC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,YAAL,EADH,EAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAoB,MAAA,SAAS,EAAC,yBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,gCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CALF,CADF,CADF;AAcD;;AAxB+B;;AA2BlC,SAASQ,QAAT,CAAkBC,MAAlB,EAAyB;AACvB,QAAMC,MAAM,GAAC,EAAb;AAEAA,EAAAA,MAAM,CAACC,UAAP,GAAkBd,cAAc,CAACY,MAAM,CAACE,UAAP,IAAqB,EAAtB,CAAhC;;AAEArB,EAAAA,CAAC,CAACsB,IAAF,CAAOd,UAAP,EAAkB,CAAC;AAACK,IAAAA;AAAD,GAAD,KAAU;AAC1B,QAAG,CAACM,MAAM,CAACN,IAAD,CAAV,EAAiB;AACfO,MAAAA,MAAM,CAACP,IAAD,CAAN,GAAa,0BAAb;AACD;AACF,GAJD;;AAMA,SAAOO,MAAP;AACD;;AACC,eAAejB,SAAS,CAAC;AACvBe,EAAAA,QADuB;AAEvBK,EAAAA,IAAI,EAAC,YAFkB;AAGvBC,EAAAA,gBAAgB,EAAC;AAHM,CAAD,CAAT,CAIZf,UAJY,CAAf,C,CAIe","sourcesContent":["//shows a form for a user to add input\nimport _ from 'lodash';\nimport React,{Component} from'react';\nimport {reduxForm, Field} from 'redux-form';//to connect with store\nimport {Link} from 'react-router-dom';\nimport SurveyField from './SurveyField';\nimport validateEmails from '../../utils/validateEmails';\nimport formFields from './formFields';\n\nclass SurveyForm extends Component{\n  renderFields(){\n    return _.map(formFields,({label, name})=>{\n      return (\n        <Field key={name} component={SurveyField} type=\"text\" label={label} name={name}/>\n    );\n  });\n}\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.props.handleSubmit(this.props.onSurveySubmit)}>\n          {this.renderFields()}\n          <Link to=\"/surveys\" className=\"red btn-flat white-text\">\n           Cancel\n          </Link>\n          <button type=\"submit\" className=\"teal btn-flat right white-text\">\n            Next\n            <i className=\"material-icons right\">done</i>\n          </button>\n        </form>\n     </div>\n   );\n  }\n}\n\nfunction validate(values){\n  const errors={};\n\n  errors.recipients=validateEmails(values.recipients || '');\n\n  _.each(formFields,({name})=>{\n    if(!values[name]){\n      errors[name]='You must provide a value';\n    }\n  });\n\n  return errors;\n}\n  export default reduxForm({\n    validate,\n    form:'surveyForm',\n    destroyOnUnmount:false\n  })(SurveyForm);//kind of similar : connect and redux\n"]},"metadata":{},"sourceType":"module"}